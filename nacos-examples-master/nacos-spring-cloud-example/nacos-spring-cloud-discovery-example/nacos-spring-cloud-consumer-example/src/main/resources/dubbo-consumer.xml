<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://dubbo.apache.org/schema/dubbo
        http://dubbo.apache.org/schema/dubbo/dubbo.xsd
        ">
	<dubbo:application name="${spring.application.name}">
		<!-- QOS:http://dubbo.apache.org/zh-cn/docs/user/references/qos.html -->
		<dubbo:parameter key="qos.enable" value="false" />
		<dubbo:parameter key="qos.accept.foreign.ip"
			value="false" />
	</dubbo:application>

	<!-- NACOS VS ZOOKEEPER:https://dubbo.apache.org/en-us/docs/dev/impls/config-center.html -->
	<dubbo:registry protocol="zookeeper"
		group="${spring.cloud.zookeeper.discovery.namespace}"
		transporter="curator"
		address="zookeeper://${spring.cloud.zookeeper.connect-string}"
		username="${spring.cloud.zookeeper.username}"
		password="${spring.cloud.zookeeper.password}" />

	<!-- <dubbo:registry protocol="nacos" address="nacos://${spring.cloud.nacos.discovery.server-addr}" 
		username="${spring.cloud.nacos.username}" password="${spring.cloud.nacos.password}"> 
		NACOS DUBBO:https://nacos.io/zh-cn/docs/use-nacos-with-dubbo.html <dubbo:parameter 
		key="namespace" value="${spring.cloud.nacos.discovery.namespace}" /> </dubbo:registry> -->

	<dubbo:protocol name="dubbo" port="${dubbo.port}" />

	<!-- 如果一个应用中涉及跨namespace、group调用，请指定group和version -->
	<dubbo:consumer timeout="60000" retries="0" />
	<dubbo:provider timeout="60000" retries="0"
		version="1.0" group="public" />

	<bean id="demoCallback"
		class="zhaohe.test.callback.service.NotifyImpl" />
	<dubbo:reference id="helloService"
		interface="zhaohe.test.service.HelloService" group="public"
		version="1.0">
		<dubbo:method name="hello" async="true"
			onreturn="demoCallback.onreturn" onthrow="demoCallback.onthrow" />
		<!-- 上述配置中，hello方法为同步调用，因此事件通知方法的执行也是同步执行。可以配置 async=true让方法调用为异步，这时事件通知的方法也是异步执行的。 
			特别强调一下，oninvoke方法不管是否异步调用，都是同步执行的 -->
	</dubbo:reference>

</beans>